{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitHub/Strimo/src/content/explora/contenido.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ConciertosRow from \"../conciertos-row\";\nimport Firebase from \"../../utils/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Contenido() {\n  _s();\n\n  const conciertos = Firebase.firestore().collection(\"Conciertos\");\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setData([]);\n    const unsubscriber = getInfo(true, \"En Vivo Ahora!\");\n    return unsubscriber;\n  }, []);\n  useEffect(() => {\n    const unsubscriber = getInfo(false, \"Conciertos que quizas te perdiste: \");\n    return unsubscriber;\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      setLoading(false);\n    }\n  }, [data]);\n\n  const getInfo = async (bol, titulo) => {\n    const promise = await conciertos.where(\"envivo\", \"==\", bol).limit(3).orderBy(\"espectadores\", \"desc\").get().then(doc => {\n      let contenedor = [];\n      doc.docs.map(datos => {\n        contenedor.push({\n          info: datos.data(),\n          id: datos.id\n        });\n      });\n      return contenedor;\n    });\n    const promesa = await Promise.all(promise);\n    setData(data => [...data, {\n      info: promesa,\n      titulo: titulo\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading || data.map(doc => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"titulo-seccion\",\n          children: doc.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ConciertosRow, {\n          data: doc.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, doc.titulo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(Contenido, \"E/Y4w2vcaAV3iqZs1mFrvIjI7mQ=\");\n\n_c = Contenido;\nexport default Contenido;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contenido\");","map":{"version":3,"sources":["/home/usuario/Documentos/GitHub/Strimo/src/content/explora/contenido.jsx"],"names":["React","useState","useEffect","ConciertosRow","Firebase","Contenido","conciertos","firestore","collection","data","setData","loading","setLoading","unsubscriber","getInfo","length","bol","titulo","promise","where","limit","orderBy","get","then","doc","contenedor","docs","map","datos","push","info","id","promesa","Promise","all"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,UAAU,GAAGF,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,YAAhC,CAAnB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,UAAMG,YAAY,GAAGC,OAAO,CAAC,IAAD,EAAO,gBAAP,CAA5B;AACA,WAAOD,YAAP;AACD,GAJQ,EAIN,EAJM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAGC,OAAO,CAAC,KAAD,EAAQ,qCAAR,CAA5B;AACA,WAAOD,YAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAI,CAACM,MAAL,GAAc,CAAlB,EAAqB;AACnBH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;;AAKA,QAAMK,OAAO,GAAG,OAAOE,GAAP,EAAYC,MAAZ,KAAuB;AACrC,UAAMC,OAAO,GAAG,MAAMZ,UAAU,CAC7Ba,KADmB,CACb,QADa,EACH,IADG,EACGH,GADH,EAEnBI,KAFmB,CAEb,CAFa,EAGnBC,OAHmB,CAGX,cAHW,EAGK,MAHL,EAInBC,GAJmB,GAKnBC,IALmB,CAKbC,GAAD,IAAS;AACb,UAAIC,UAAU,GAAG,EAAjB;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAcC,KAAD,IAAW;AACtBH,QAAAA,UAAU,CAACI,IAAX,CAAgB;AAAEC,UAAAA,IAAI,EAAEF,KAAK,CAACnB,IAAN,EAAR;AAAsBsB,UAAAA,EAAE,EAAEH,KAAK,CAACG;AAAhC,SAAhB;AACD,OAFD;AAGA,aAAON,UAAP;AACD,KAXmB,CAAtB;AAYA,UAAMO,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYhB,OAAZ,CAAtB;AACAR,IAAAA,OAAO,CAAED,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAU;AAAEqB,MAAAA,IAAI,EAAEE,OAAR;AAAiBf,MAAAA,MAAM,EAAEA;AAAzB,KAAV,CAAX,CAAP;AACD,GAfD;;AAgBA,sBACE;AAAA,cACGN,OAAO,IACNF,IAAI,CAACkB,GAAL,CAAUH,GAAD,IAAS;AAChB,0BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAgCA,GAAG,CAACP;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEO,GAAG,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUN,GAAG,CAACP,MAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD;AAFJ,mBADF;AAaD;;GA/CQZ,S;;KAAAA,S;AAgDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ConciertosRow from \"../conciertos-row\";\r\nimport Firebase from \"../../utils/firebase\";\r\nfunction Contenido() {\r\n  const conciertos = Firebase.firestore().collection(\"Conciertos\");\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    setData([]);\r\n    const unsubscriber = getInfo(true, \"En Vivo Ahora!\");\r\n    return unsubscriber;\r\n  }, []);\r\n  useEffect(() => {\r\n    const unsubscriber = getInfo(false, \"Conciertos que quizas te perdiste: \");\r\n    return unsubscriber;\r\n  }, []);\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      setLoading(false);\r\n    }\r\n  }, [data]);\r\n  const getInfo = async (bol, titulo) => {\r\n    const promise = await conciertos\r\n      .where(\"envivo\", \"==\", bol)\r\n      .limit(3)\r\n      .orderBy(\"espectadores\", \"desc\")\r\n      .get()\r\n      .then((doc) => {\r\n        let contenedor = [];\r\n        doc.docs.map((datos) => {\r\n          contenedor.push({ info: datos.data(), id: datos.id });\r\n        });\r\n        return contenedor;\r\n      });\r\n    const promesa = await Promise.all(promise);\r\n    setData((data) => [...data, { info: promesa, titulo: titulo }]);\r\n  };\r\n  return (\r\n    <>\r\n      {loading ||\r\n        data.map((doc) => {\r\n          return (\r\n            <div key={doc.titulo}>\r\n              <h1 className=\"titulo-seccion\">{doc.titulo}</h1>\r\n              <ConciertosRow data={doc.info} />\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\nexport default Contenido;\r\n"]},"metadata":{},"sourceType":"module"}