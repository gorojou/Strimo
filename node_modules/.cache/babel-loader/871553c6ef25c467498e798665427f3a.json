{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitHub/Strimo/src/content/chatstest/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"../../utils/firebase\";\nimport { useAuth } from \"../context/authContext\";\nimport Menu from \"./menu\";\nimport Chat from \"./chat\";\nimport \"./chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Index() {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const chats = firebase.firestore().collection(\"Chat\");\n  const conciertos = firebase.firestore().collection(\"Conciertos\");\n  const [chat, setChat] = useState([]);\n  const [docu, setDocu] = useState([]);\n  const [menu, setMenu] = useState(false);\n  useEffect(() => {\n    const unsubscriber = chats.where(\"integrantes\", \"array-contains\", currentUser.email).get().then(async data => {\n      const Chats = await Promise.all(data.docs.map(async doc => {\n        let artista = \"\";\n        let imagen = \"\";\n        await conciertos.doc(doc.data().concierto).get().then(async snapshot => {\n          artista = snapshot.data().artista;\n          imagen = snapshot.data().img;\n        }); // await Promise.all(\n        //   conciertos.doc(doc.data().concierto).onSnapshot((snap) => {\n        //     artista = snap.data().artista;\n        //     imagen = snap.data().img;\n        //     console.log(artista);\n        //   })\n        // );\n        // console.log(artista, \"espera\");\n\n        return {\n          id: doc.id,\n          artista: artista,\n          img: imagen\n        };\n      }));\n      setChat(Chats);\n    });\n    return unsubscriber;\n  }, []);\n\n  const toggler = () => {\n    setMenu(!menu);\n  };\n\n  const openChat = doc => {\n    if (!docu.some(element => element == doc)) {\n      setDocu([...docu, doc]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bottom\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-space\",\n      children: docu.length > 0 && /*#__PURE__*/_jsxDEV(Chat, {\n        infor: docu,\n        setDocu: setDocu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-menu-space\",\n      children: menu ? /*#__PURE__*/_jsxDEV(Menu, {\n        chats: chat,\n        toggler: toggler,\n        openChat: openChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-button\",\n        onClick: () => toggler(),\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"CRaHr5XJj3STTIXDVChquZxROns=\", false, function () {\n  return [useAuth];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/usuario/Documentos/GitHub/Strimo/src/content/chatstest/index.jsx"],"names":["React","useState","useEffect","firebase","useAuth","Menu","Chat","Index","currentUser","chats","firestore","collection","conciertos","chat","setChat","docu","setDocu","menu","setMenu","unsubscriber","where","email","get","then","data","Chats","Promise","all","docs","map","doc","artista","imagen","concierto","snapshot","img","id","toggler","openChat","some","element","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../../utils/firebase\";\r\nimport { useAuth } from \"../context/authContext\";\r\nimport Menu from \"./menu\";\r\nimport Chat from \"./chat\";\r\nimport \"./chat.css\";\r\n\r\nfunction Index() {\r\n  const { currentUser } = useAuth();\r\n  const chats = firebase.firestore().collection(\"Chat\");\r\n  const conciertos = firebase.firestore().collection(\"Conciertos\");\r\n  const [chat, setChat] = useState([]);\r\n  const [docu, setDocu] = useState([]);\r\n  const [menu, setMenu] = useState(false);\r\n  useEffect(() => {\r\n    const unsubscriber = chats\r\n      .where(\"integrantes\", \"array-contains\", currentUser.email)\r\n      .get()\r\n      .then(async (data) => {\r\n        const Chats = await Promise.all(\r\n          data.docs.map(async (doc) => {\r\n            let artista = \"\";\r\n            let imagen = \"\";\r\n            await conciertos\r\n              .doc(doc.data().concierto)\r\n              .get()\r\n              .then(async (snapshot) => {\r\n                artista = snapshot.data().artista;\r\n                imagen = snapshot.data().img;\r\n              });\r\n            // await Promise.all(\r\n            //   conciertos.doc(doc.data().concierto).onSnapshot((snap) => {\r\n            //     artista = snap.data().artista;\r\n            //     imagen = snap.data().img;\r\n            //     console.log(artista);\r\n            //   })\r\n            // );\r\n            // console.log(artista, \"espera\");\r\n            return { id: doc.id, artista: artista, img: imagen };\r\n          })\r\n        );\r\n        setChat(Chats);\r\n      });\r\n    return unsubscriber;\r\n  }, []);\r\n  const toggler = () => {\r\n    setMenu(!menu);\r\n  };\r\n  const openChat = (doc) => {\r\n    if (!docu.some((element) => element == doc)) {\r\n      setDocu([...docu, doc]);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"chat-bottom\">\r\n      <div className=\"chat-space\">\r\n        {docu.length > 0 && <Chat infor={docu} setDocu={setDocu} />}\r\n      </div>\r\n      <div className=\"chat-menu-space\">\r\n        {menu ? (\r\n          <Menu chats={chat} toggler={toggler} openChat={openChat} />\r\n        ) : (\r\n          <div className=\"chat-button\" onClick={() => toggler()}>\r\n            <h4>Chats</h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}