{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitHub/Strimo/src/content/link/confirmar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../lobby/navbar\";\nimport firebase from \"../../utils/firebase\";\nimport { useAuth } from \"../context/authContext\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Confirmar() {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [match, setMatch] = useState(false);\n  const {\n    currentUser\n  } = useAuth();\n  const time = firebase.firestore.Timestamp.now().toMillis();\n  const invitacionDoc = firebase.firestore().collection(\"Invitacion\");\n  const addToChat = firebase.firestore().collection(\"Chat\");\n  const [invitacionId, setInvitacionId] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    invitacionDoc.where(\"tiempo\", \"==\", parseInt(id)).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        if (doc.data() && !doc.data().usuarioInvitado && doc.data().tiempo > time) {\n          doc.ref.update({\n            usuarioInvitado: currentUser.email\n          });\n\n          try {\n            console.log(doc.data().chatId);\n            addToChat.doc(doc.data().chatId).update({\n              integrantes: firebase.firestore.FieldValue.arrayUnion(currentUser.email)\n            });\n            setInvitacionId(doc.data().chatId); // addToChat\n            //   .where(\"comprobante\", \"==\", doc.data().comprobante)\n            //   .get()\n            //   .then((snap) => {\n            //     let arreglo = [];\n            //     snap.forEach((doc) => {\n            //       setInvitacionId(doc.id);\n            //       arreglo = doc.data().integrantes;\n            //       arreglo.push(currentUser.email);\n            //       doc.ref.update({\n            //         integrantes: arreglo,\n            //       });\n            //     });\n            //   });\n          } catch {\n            alert(\"Algo salio mal\");\n          }\n\n          setMatch(true);\n        }\n\n        setLoading(false);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), loading || (match ? /*#__PURE__*/_jsxDEV(Confirmado, {\n      history: history,\n      chatId: invitacionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Invalido, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Confirmar, \"W1Vb3KiNBkvOKwwe14TkpMWy1ms=\", false, function () {\n  return [useHistory, useParams, useAuth];\n});\n\n_c = Confirmar;\n\nconst Confirmado = ({\n  history,\n  chatId\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fondo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caja-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Haz sido invitado/a a ver el concierto de \\\"Nombre\\\"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"El concierto sera a las \\\"Hora\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"El link es solo valido para ti, no se puede volver a utilizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primario\",\n          style: {\n            width: \"fit-content\"\n          },\n          onClick: () => history.push(`/chat/${chatId}`),\n          children: \"Ir al Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Confirmado;\n\nconst Invalido = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fondo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caja-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Link invalido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"El link puede ser invalido porque esta mal escrito o porque se vencio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Para mas informacion contactanos por los canales disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = Invalido;\nexport default Confirmar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Confirmar\");\n$RefreshReg$(_c2, \"Confirmado\");\n$RefreshReg$(_c3, \"Invalido\");","map":{"version":3,"sources":["/home/usuario/Documentos/GitHub/Strimo/src/content/link/confirmar.jsx"],"names":["React","useState","useEffect","Navbar","firebase","useAuth","useParams","useHistory","Confirmar","history","id","match","setMatch","currentUser","time","firestore","Timestamp","now","toMillis","invitacionDoc","collection","addToChat","invitacionId","setInvitacionId","loading","setLoading","where","parseInt","get","then","snapshot","forEach","doc","data","usuarioInvitado","tiempo","ref","update","email","console","log","chatId","integrantes","FieldValue","arrayUnion","alert","Confirmado","width","push","Invalido"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../lobby/navbar\";\r\nimport firebase from \"../../utils/firebase\";\r\nimport { useAuth } from \"../context/authContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Confirmar() {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [match, setMatch] = useState(false);\r\n  const { currentUser } = useAuth();\r\n  const time = firebase.firestore.Timestamp.now().toMillis();\r\n  const invitacionDoc = firebase.firestore().collection(\"Invitacion\");\r\n  const addToChat = firebase.firestore().collection(\"Chat\");\r\n  const [invitacionId, setInvitacionId] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    invitacionDoc\r\n      .where(\"tiempo\", \"==\", parseInt(id))\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          if (\r\n            doc.data() &&\r\n            !doc.data().usuarioInvitado &&\r\n            doc.data().tiempo > time\r\n          ) {\r\n            doc.ref.update({ usuarioInvitado: currentUser.email });\r\n            try {\r\n              console.log(doc.data().chatId);\r\n              addToChat.doc(doc.data().chatId).update({\r\n                integrantes: firebase.firestore.FieldValue.arrayUnion(\r\n                  currentUser.email\r\n                ),\r\n              });\r\n              setInvitacionId(doc.data().chatId);\r\n              // addToChat\r\n              //   .where(\"comprobante\", \"==\", doc.data().comprobante)\r\n              //   .get()\r\n              //   .then((snap) => {\r\n              //     let arreglo = [];\r\n              //     snap.forEach((doc) => {\r\n              //       setInvitacionId(doc.id);\r\n              //       arreglo = doc.data().integrantes;\r\n              //       arreglo.push(currentUser.email);\r\n              //       doc.ref.update({\r\n              //         integrantes: arreglo,\r\n              //       });\r\n              //     });\r\n              //   });\r\n            } catch {\r\n              alert(\"Algo salio mal\");\r\n            }\r\n            setMatch(true);\r\n          }\r\n          setLoading(false);\r\n        });\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading ||\r\n        (match ? (\r\n          <Confirmado history={history} chatId={invitacionId} />\r\n        ) : (\r\n          <Invalido />\r\n        ))}\r\n    </>\r\n  );\r\n}\r\nconst Confirmado = ({ history, chatId }) => {\r\n  return (\r\n    <>\r\n      <div className=\"fondo\">\r\n        <div className=\"caja-link\">\r\n          <h2>Haz sido invitado/a a ver el concierto de \"Nombre\"!</h2>\r\n          <h3>El concierto sera a las \"Hora\"</h3>\r\n          <p>El link es solo valido para ti, no se puede volver a utilizar</p>\r\n          <button\r\n            className=\"primario\"\r\n            style={{ width: \"fit-content\" }}\r\n            onClick={() => history.push(`/chat/${chatId}`)}\r\n          >\r\n            Ir al Chat\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst Invalido = () => {\r\n  return (\r\n    <>\r\n      <div className=\"fondo\">\r\n        <div className=\"caja-link\">\r\n          <h2>Link invalido</h2>\r\n          <h3>\r\n            El link puede ser invalido porque esta mal escrito o porque se\r\n            vencio\r\n          </h3>\r\n          <p>Para mas informacion contactanos por los canales disponibles</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Confirmar;\r\n"]},"metadata":{},"sourceType":"module"}