{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitHub/Strimo/src/content/context/authContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../../utils/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const logIn = async (email, password) => {\n    await auth.signInWithEmailAndPassword(email, password); // .then(history.push(\"/\"));\n\n    history.push(\"/\");\n  };\n\n  const signUp = async (email, password, displayName) => {\n    return await auth.createUserWithEmailAndPassword(email, password).then(async user => {\n      if (user.user) {\n        await user.user.updateProfile({\n          displayName: displayName\n        });\n        history.push(\"/\");\n      }\n    });\n  };\n\n  const logOut = () => {\n    history.push(\"/login\");\n    return auth.signOut();\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    logIn,\n    logOut,\n    signUp\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: loading || children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"MdfPmoTWZcNbIozPyl1jWktdv9s=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/usuario/Documentos/GitHub/Strimo/src/content/context/authContext.js"],"names":["React","useContext","useState","useEffect","auth","useHistory","AuthContext","createContext","useAuth","AuthProvider","children","history","currentUser","setCurrentUser","loading","setLoading","logIn","email","password","signInWithEmailAndPassword","push","signUp","displayName","createUserWithEmailAndPassword","then","user","updateProfile","logOut","signOut","unsubscribe","onAuthStateChanged","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AACA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD;;GAFeE,O;;AAGhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMc,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACvC,UAAMd,IAAI,CAACe,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAN,CADuC,CAEvC;;AACAP,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,GAJD;;AAKA,QAAMC,MAAM,GAAG,OAAOJ,KAAP,EAAcC,QAAd,EAAwBI,WAAxB,KAAwC;AACrD,WAAO,MAAMlB,IAAI,CACdmB,8BADU,CACqBN,KADrB,EAC4BC,QAD5B,EAEVM,IAFU,CAEL,MAAOC,IAAP,IAAgB;AACpB,UAAIA,IAAI,CAACA,IAAT,EAAe;AACb,cAAMA,IAAI,CAACA,IAAL,CAAUC,aAAV,CAAwB;AAC5BJ,UAAAA,WAAW,EAAEA;AADe,SAAxB,CAAN;AAGAX,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD;AACF,KATU,CAAb;AAUD,GAXD;;AAYA,QAAMO,MAAM,GAAG,MAAM;AACnBhB,IAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACA,WAAOhB,IAAI,CAACwB,OAAL,EAAP;AACD,GAHD;;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,WAAW,GAAGzB,IAAI,CAAC0B,kBAAL,CAAyBL,IAAD,IAAU;AACpDZ,MAAAA,cAAc,CAACY,IAAD,CAAd;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAIA,WAAOc,WAAP;AACD,GANQ,EAMN,EANM,CAAT;AAOA,QAAME,KAAK,GAAG;AACZnB,IAAAA,WADY;AAEZI,IAAAA,KAFY;AAGZW,IAAAA,MAHY;AAIZN,IAAAA;AAJY,GAAd;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,KAA7B;AAAA,cACGjB,OAAO,IAAIJ;AADd;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IA3CeD,Y;UACEJ,U;;;KADFI,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../../utils/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AuthContext = React.createContext();\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\nexport function AuthProvider({ children }) {\r\n  const history = useHistory();\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const logIn = async (email, password) => {\r\n    await auth.signInWithEmailAndPassword(email, password);\r\n    // .then(history.push(\"/\"));\r\n    history.push(\"/\");\r\n  };\r\n  const signUp = async (email, password, displayName) => {\r\n    return await auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async (user) => {\r\n        if (user.user) {\r\n          await user.user.updateProfile({\r\n            displayName: displayName,\r\n          });\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n  const logOut = () => {\r\n    history.push(\"/login\");\r\n    return auth.signOut();\r\n  };\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n  const value = {\r\n    currentUser,\r\n    logIn,\r\n    logOut,\r\n    signUp,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {loading || children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}