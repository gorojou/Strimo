{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitHub/Strimo/src/content/chats/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"../../utils/firebase\";\nimport { useAuth } from \"../context/authContext\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./chats.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chats() {\n  _s();\n\n  const history = useHistory();\n  const chats = firebase.firestore().collection(\"Chat\");\n  const conciertos = firebase.firestore().collection(\"Conciertos\");\n  const {\n    currentUser\n  } = useAuth();\n  const [chat, setChat] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscriber = chats.where(\"integrantes\", \"array-contains\", currentUser.email).get().then(async data => {\n      const Chats = await Promise.all(data.docs.map(async doc => {\n        let artista = \"\";\n        await conciertos.doc(doc.data().concierto).get().then(async snapshot => {\n          artista = snapshot.data().artista;\n        });\n        return {\n          id: doc.id,\n          artista: artista\n        };\n      }));\n      setChat(Chats);\n    });\n    return unsubscriber;\n  }, []);\n  useEffect(() => {\n    setLoading(false);\n  }, [chat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-menu degradado\",\n      children: !loading && chat.map(doc => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-contenedor\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Chat con \", doc.artista]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"primario margenes-boton\",\n              onClick: () => history.push(`/chat/${doc.id}`),\n              children: \"Ir al chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"No te lo pierdas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Entra ya!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, doc.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chats, \"ZdkMrx75LGTNfUS5k9+pK85V1CY=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["/home/usuario/Documentos/GitHub/Strimo/src/content/chats/index.jsx"],"names":["React","useState","useEffect","firebase","useAuth","useHistory","Chats","history","chats","firestore","collection","conciertos","currentUser","chat","setChat","loading","setLoading","unsubscriber","where","email","get","then","data","Promise","all","docs","map","doc","artista","concierto","snapshot","id","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,aAAP;;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAMG,KAAK,GAAGL,QAAQ,CAACM,SAAT,GAAqBC,UAArB,CAAgC,MAAhC,CAAd;AACA,QAAMC,UAAU,GAAGR,QAAQ,CAACM,SAAT,GAAqBC,UAArB,CAAgC,YAAhC,CAAnB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAkBR,OAAO,EAA/B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,YAAY,GAAGT,KAAK,CACvBU,KADkB,CACZ,aADY,EACG,gBADH,EACqBN,WAAW,CAACO,KADjC,EAElBC,GAFkB,GAGlBC,IAHkB,CAGb,MAAOC,IAAP,IAAgB;AACpB,YAAMhB,KAAK,GAAG,MAAMiB,OAAO,CAACC,GAAR,CAClBF,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAc,MAAOC,GAAP,IAAe;AAC3B,YAAIC,OAAO,GAAG,EAAd;AACA,cAAMjB,UAAU,CACbgB,GADG,CACCA,GAAG,CAACL,IAAJ,GAAWO,SADZ,EAEHT,GAFG,GAGHC,IAHG,CAGE,MAAOS,QAAP,IAAoB;AACxBF,UAAAA,OAAO,GAAGE,QAAQ,CAACR,IAAT,GAAgBM,OAA1B;AACD,SALG,CAAN;AAMA,eAAO;AAAEG,UAAAA,EAAE,EAAEJ,GAAG,CAACI,EAAV;AAAcH,UAAAA,OAAO,EAAEA;AAAvB,SAAP;AACD,OATD,CADkB,CAApB;AAYAd,MAAAA,OAAO,CAACR,KAAD,CAAP;AACD,KAjBkB,CAArB;AAkBA,WAAOW,YAAP;AACD,GApBQ,EAoBN,EApBM,CAAT;AAqBAf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFQ,EAEN,CAACH,IAAD,CAFM,CAAT;AAGA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBACG,CAACE,OAAD,IACCF,IAAI,CAACa,GAAL,CAAUC,GAAD,IAAS;AAChB,4BACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA,sCAAcA,GAAG,CAACC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,SAAS,EAAC,yBADZ;AAEE,cAAA,OAAO,EAAE,MAAMrB,OAAO,CAACyB,IAAR,CAAc,SAAQL,GAAG,CAACI,EAAG,EAA7B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAsCJ,GAAG,CAACI,EAA1C;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD,OAhBD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;GAvDQzB,K;UACSD,U,EAGQD,O;;;KAJjBE,K;AAyDT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../../utils/firebase\";\r\nimport { useAuth } from \"../context/authContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./chats.css\";\r\nfunction Chats() {\r\n  const history = useHistory();\r\n  const chats = firebase.firestore().collection(\"Chat\");\r\n  const conciertos = firebase.firestore().collection(\"Conciertos\");\r\n  const { currentUser } = useAuth();\r\n  const [chat, setChat] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const unsubscriber = chats\r\n      .where(\"integrantes\", \"array-contains\", currentUser.email)\r\n      .get()\r\n      .then(async (data) => {\r\n        const Chats = await Promise.all(\r\n          data.docs.map(async (doc) => {\r\n            let artista = \"\";\r\n            await conciertos\r\n              .doc(doc.data().concierto)\r\n              .get()\r\n              .then(async (snapshot) => {\r\n                artista = snapshot.data().artista;\r\n              });\r\n            return { id: doc.id, artista: artista };\r\n          })\r\n        );\r\n        setChat(Chats);\r\n      });\r\n    return unsubscriber;\r\n  }, []);\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [chat]);\r\n  return (\r\n    <>\r\n      <div className=\"chat-menu degradado\">\r\n        {!loading &&\r\n          chat.map((doc) => {\r\n            return (\r\n              <div className=\"chat-contenedor\" key={doc.id}>\r\n                <div className=\"chat-info\">\r\n                  <h1>Chat con {doc.artista}</h1>\r\n                  <button\r\n                    className=\"primario margenes-boton\"\r\n                    onClick={() => history.push(`/chat/${doc.id}`)}\r\n                  >\r\n                    Ir al chat\r\n                  </button>\r\n                  <h5>No te lo pierdas</h5>\r\n                  <p>Entra ya!</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n"]},"metadata":{},"sourceType":"module"}