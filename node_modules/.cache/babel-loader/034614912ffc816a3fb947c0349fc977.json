{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitHub/Strimo/src/content/chatstest/mensaje.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport firebase from \"../../utils/firebase\";\nimport { useAuth } from \"../context/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Mensajes({\n  id,\n  goToBottom\n}) {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const chatMensajes = firebase.firestore().collection(\"Chat\");\n  const [chat, setChat] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscriber = chatMensajes.doc(id).collection(\"Mensajes\").orderBy(\"timeCreated\").limitToLast(25).onSnapshot(snapshot => {\n      let mensajes = [];\n      snapshot.forEach(data => {\n        mensajes.push({\n          id: data.id,\n          mensaje: data.data()\n        });\n      });\n      setChat(mensajes);\n      setLoading(false);\n    });\n    return unsubscriber;\n  }, []);\n  useEffect(() => {\n    goToBottom();\n  }, [chat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chat.map(doc => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: doc.mensaje.email !== currentUser.email ? /*#__PURE__*/_jsxDEV(MensajeRecibido, {\n          mensaje: doc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(MensajeEnviado, {\n          mensaje: doc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, doc.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(Mensajes, \"bAGJ1SDIyIywtUV31+LQtUhXUe4=\", false, function () {\n  return [useAuth];\n});\n\n_c = Mensajes;\n\nconst MensajeEnviado = ({\n  mensaje\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"derecha\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mensajeE\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nombreE\",\n        children: mensaje.mensaje.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textoE\",\n        children: mensaje.mensaje.texto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = MensajeEnviado;\n\nconst MensajeRecibido = ({\n  mensaje\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mensaje\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre\",\n      children: mensaje.mensaje.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"texto\",\n      children: mensaje.mensaje.texto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = MensajeRecibido;\nexport default Mensajes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Mensajes\");\n$RefreshReg$(_c2, \"MensajeEnviado\");\n$RefreshReg$(_c3, \"MensajeRecibido\");","map":{"version":3,"sources":["/home/usuario/Documentos/GitHub/Strimo/src/content/chatstest/mensaje.jsx"],"names":["React","useState","useEffect","useRef","firebase","useAuth","Mensajes","id","goToBottom","currentUser","chatMensajes","firestore","collection","chat","setChat","loading","setLoading","unsubscriber","doc","orderBy","limitToLast","onSnapshot","snapshot","mensajes","forEach","data","push","mensaje","map","email","MensajeEnviado","nombre","texto","MensajeRecibido"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport firebase from \"../../utils/firebase\";\r\nimport { useAuth } from \"../context/authContext\";\r\nfunction Mensajes({ id, goToBottom }) {\r\n  const { currentUser } = useAuth();\r\n  const chatMensajes = firebase.firestore().collection(\"Chat\");\r\n  const [chat, setChat] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const unsubscriber = chatMensajes\r\n      .doc(id)\r\n      .collection(\"Mensajes\")\r\n      .orderBy(\"timeCreated\")\r\n      .limitToLast(25)\r\n      .onSnapshot((snapshot) => {\r\n        let mensajes = [];\r\n        snapshot.forEach((data) => {\r\n          mensajes.push({ id: data.id, mensaje: data.data() });\r\n        });\r\n        setChat(mensajes);\r\n        setLoading(false);\r\n      });\r\n    return unsubscriber;\r\n  }, []);\r\n  useEffect(() => {\r\n    goToBottom();\r\n  }, [chat]);\r\n  return (\r\n    <>\r\n      {chat.map((doc) => {\r\n        return (\r\n          <div key={doc.id}>\r\n            {doc.mensaje.email !== currentUser.email ? (\r\n              <MensajeRecibido mensaje={doc} />\r\n            ) : (\r\n              <MensajeEnviado mensaje={doc} />\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\nconst MensajeEnviado = ({ mensaje }) => {\r\n  return (\r\n    <div className=\"derecha\">\r\n      <div className=\"mensajeE\">\r\n        <div className=\"nombreE\">{mensaje.mensaje.nombre}</div>\r\n        <div className=\"textoE\">{mensaje.mensaje.texto}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst MensajeRecibido = ({ mensaje }) => {\r\n  return (\r\n    <div className=\"mensaje\">\r\n      <div className=\"nombre\">{mensaje.mensaje.nombre}</div>\r\n      <div className=\"texto\">{mensaje.mensaje.texto}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Mensajes;\r\n"]},"metadata":{},"sourceType":"module"}