{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitHub/Strimo/src/content/chat/chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Navbar from \"../lobby/navbar\";\nimport firebase from \"../../utils/firebase\";\nimport { useAuth } from \"../context/authContext\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const history = useHistory();\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    id\n  } = useParams();\n  const addToChat = firebase.firestore().collection(\"Chat\").doc(id);\n  const mensajeRef = useRef();\n  const scrollRef = useRef();\n  const [loading, setLoading] = useState(true);\n  const [chat, setChat] = useState([{}]);\n  useEffect(() => {\n    const unsubscribe = addToChat.onSnapshot(doc => {\n      if (!doc.data() || !doc.data().integrantes.find(email => email === currentUser.email)) {\n        history.push(\"/\");\n      } else {\n        addToChat.collection(\"Mensajes\").orderBy(\"timeCreated\").limitToLast(25).onSnapshot(snapshot => {\n          let mensajes = [];\n          snapshot.forEach(data => {\n            mensajes.push({\n              id: data.id,\n              mensaje: data.data()\n            });\n          });\n          setChat(mensajes);\n          setLoading(false); // goToBottom();\n        });\n      }\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    if (!loading) {\n      goToBottom();\n    }\n  }, [chat]);\n\n  const goToBottom = () => {\n    scrollRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const handleMensaje = async e => {\n    e.preventDefault();\n    await addToChat.collection(\"Mensajes\").add({\n      texto: mensajeRef.current.value,\n      email: currentUser.email,\n      nombre: currentUser.displayName,\n      timeCreated: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    goToBottom();\n    mensajeRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading || /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mensajes\",\n        children: [chat.map(data => {\n          // return <p>{JSON.stringify(mensaje.texto)}</p>;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: data.mensaje.email !== currentUser.email ? /*#__PURE__*/_jsxDEV(MensajeRecibido, {\n              mensaje: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(MensajeEnviado, {\n              mensaje: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scrollRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleMensaje,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Di algo a `Aca nombre` \",\n            ref: mensajeRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: \"10%\",\n              margin: \"5px\"\n            },\n            type: \"submit\",\n            className: \"primario\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chat, \"Dw+X33wr4Xuqrt60wmq7Z2QP2s0=\", false, function () {\n  return [useHistory, useAuth, useParams];\n});\n\n_c = Chat;\n\nconst MensajeEnviado = ({\n  mensaje\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"derecha\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mensajeE\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nombreE\",\n        children: mensaje.mensaje.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textoE\",\n        children: mensaje.mensaje.texto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = MensajeEnviado;\n\nconst MensajeRecibido = ({\n  mensaje\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mensaje\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre\",\n      children: mensaje.mensaje.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"texto\",\n      children: mensaje.mensaje.texto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = MensajeRecibido;\nexport default Chat;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"MensajeEnviado\");\n$RefreshReg$(_c3, \"MensajeRecibido\");","map":{"version":3,"sources":["/home/usuario/Documentos/GitHub/Strimo/src/content/chat/chat.jsx"],"names":["React","useState","useEffect","useRef","Navbar","firebase","useAuth","useParams","useHistory","Chat","history","currentUser","id","addToChat","firestore","collection","doc","mensajeRef","scrollRef","loading","setLoading","chat","setChat","unsubscribe","onSnapshot","data","integrantes","find","email","push","orderBy","limitToLast","snapshot","mensajes","forEach","mensaje","goToBottom","current","scrollIntoView","behavior","handleMensaje","e","preventDefault","add","texto","value","nombre","displayName","timeCreated","FieldValue","serverTimestamp","map","width","margin","MensajeEnviado","MensajeRecibido"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Navbar from \"../lobby/navbar\";\r\nimport firebase from \"../../utils/firebase\";\r\nimport { useAuth } from \"../context/authContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Chat() {\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  const { id } = useParams();\r\n  const addToChat = firebase.firestore().collection(\"Chat\").doc(id);\r\n  const mensajeRef = useRef();\r\n  const scrollRef = useRef();\r\n  const [loading, setLoading] = useState(true);\r\n  const [chat, setChat] = useState([{}]);\r\n  useEffect(() => {\r\n    const unsubscribe = addToChat.onSnapshot((doc) => {\r\n      if (\r\n        !doc.data() ||\r\n        !doc.data().integrantes.find((email) => email === currentUser.email)\r\n      ) {\r\n        history.push(\"/\");\r\n      } else {\r\n        addToChat\r\n          .collection(\"Mensajes\")\r\n          .orderBy(\"timeCreated\")\r\n          .limitToLast(25)\r\n          .onSnapshot((snapshot) => {\r\n            let mensajes = [];\r\n            snapshot.forEach((data) => {\r\n              mensajes.push({ id: data.id, mensaje: data.data() });\r\n            });\r\n            setChat(mensajes);\r\n            setLoading(false);\r\n            // goToBottom();\r\n          });\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      goToBottom();\r\n    }\r\n  }, [chat]);\r\n  const goToBottom = () => {\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  const handleMensaje = async (e) => {\r\n    e.preventDefault();\r\n    await addToChat.collection(\"Mensajes\").add({\r\n      texto: mensajeRef.current.value,\r\n      email: currentUser.email,\r\n      nombre: currentUser.displayName,\r\n      timeCreated: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    goToBottom();\r\n    mensajeRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading || (\r\n        <div className=\"chat\">\r\n          <div className=\"mensajes\">\r\n            {chat.map((data) => {\r\n              // return <p>{JSON.stringify(mensaje.texto)}</p>;\r\n              return (\r\n                <div key={data.id}>\r\n                  {data.mensaje.email !== currentUser.email ? (\r\n                    <MensajeRecibido mensaje={data} />\r\n                  ) : (\r\n                    <MensajeEnviado mensaje={data} />\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n            <div ref={scrollRef}></div>\r\n          </div>\r\n          <div className=\"input\">\r\n            <form onSubmit={handleMensaje}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Di algo a `Aca nombre` \"\r\n                ref={mensajeRef}\r\n              />\r\n              <button\r\n                style={{ width: \"10%\", margin: \"5px\" }}\r\n                type=\"submit\"\r\n                className=\"primario\"\r\n              >\r\n                Enviar\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst MensajeEnviado = ({ mensaje }) => {\r\n  return (\r\n    <div className=\"derecha\">\r\n      <div className=\"mensajeE\">\r\n        <div className=\"nombreE\">{mensaje.mensaje.nombre}</div>\r\n        <div className=\"textoE\">{mensaje.mensaje.texto}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst MensajeRecibido = ({ mensaje }) => {\r\n  return (\r\n    <div className=\"mensaje\">\r\n      <div className=\"nombre\">{mensaje.mensaje.nombre}</div>\r\n      <div className=\"texto\">{mensaje.mensaje.texto}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}